{"version":3,"sources":["../../src/view/Profile.js"],"names":["React","PropTypes","Yup","Form","FormikForm","FormControl","withEFormik","EFormikTextField","EFormikButton","PersonShape","Profile","props","person","party","validationSchema","firstName","lastName","console","log","Component","isRequired","onChange","func","newValues","ValidatingProfile","enableReinitialize","onSubmit","values","formik","mapPropsToValues","validateOnInitial","validateOnReset","validateOnBlur","validateOnChange","object","shape","string","min"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,IAAI,IAAIC,UAAhB,QAAiC,QAAjC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,WAAR,EAAqBC,gBAArB,EAAuCC,aAAvC,QAA2D,SAA3D;AAEA,SAAQC,WAAR,QAA0B,sBAA1B;AAEA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAUW;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACOC,MADP,eACAC,KADA;AAAA,UACeC,gBADf,eACeA,gBADf;AAAA,UAEAC,SAFA,GAEuBH,MAFvB,CAEAG,SAFA;AAAA,UAEWC,QAFX,GAEuBJ,MAFvB,CAEWI,QAFX;AAGPC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKP,KAAnC;AACA,aAAO,oBAAC,UAAD,QACL,oBAAC,WAAD,QAAa,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,YAAxB;AAAqC,QAAA,IAAI,EAAC;AAA1C,QAAb,CADK,EAEL,oBAAC,WAAD,QAAa,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,WAAxB;AAAoC,QAAA,IAAI,EAAC;AAAzC,QAAb,CAFK,EAGL,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC;AAApB,iBAHK,EAIL,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC;AAApB,kBAJK,CAAP;AAMD;AApBH;;AAAA;AAAA,EAA6BX,KAAK,CAACmB,SAAnC;;gBAAaT,O,eACQ;AACjBG,EAAAA,KAAK,EAAEJ,WAAW,CAACW,UADF;AAEjBC,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB;AAFH,C;;gBADRZ,O,kBAMW;AACpBW,EAAAA,QADoB,oBACXT,MADW,EACHW,SADG,EACQ,CAAE;AADV,C;;AAiBxB,OAAO,IAAMC,iBAAiB,GAAGlB,WAAW,CAAC;AAC3CmB,EAAAA,kBAAkB,EAAE,IADuB;AAE3CC,EAAAA,QAF2C,oBAElCC,MAFkC,EAE1BC,MAF0B,EAElB;AACvBX,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBS,MAAtB,EAA8BC,MAA9B;AACD,GAJ0C;AAK3CC,EAAAA,gBAL2C,4BAK1BlB,KAL0B,EAKnB;AAAA,QACRC,MADQ,GACED,KADF,CACfE,KADe;AAAA,QAEfE,SAFe,GAEQH,MAFR,CAEfG,SAFe;AAAA,QAEJC,QAFI,GAEQJ,MAFR,CAEJI,QAFI;AAGtB,WAAO;AAACD,MAAAA,SAAS,EAATA,SAAD;AAAYC,MAAAA,QAAQ,EAARA;AAAZ,KAAP;AACD,GAT0C;AAU3Cc,EAAAA,iBAAiB,EAAE,IAVwB;AAW3CC,EAAAA,eAAe,EAAE,IAX0B;AAY3CC,EAAAA,cAAc,EAAE,IAZ2B;AAa3CC,EAAAA,gBAAgB,EAAE,IAbyB;AAc3CnB,EAAAA,gBAAgB,EAAEZ,GAAG,CAACgC,MAAJ,GAAaC,KAAb,CAAmB;AACnCpB,IAAAA,SAAS,EAAEb,GAAG,CAACkC,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,CADwB;AAEnCrB,IAAAA,QAAQ,EAAEd,GAAG,CAACkC,MAAJ;AAFyB,GAAnB;AAdyB,CAAD,CAAX,CAkB9B1B,OAlB8B,CAA1B","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as Yup from 'yup'\nimport {Form as FormikForm} from 'formik'\nimport FormControl from '@material-ui/core/FormControl' \nimport {withEFormik, EFormikTextField, EFormikButton} from 'eformik'\n\nimport {PersonShape} from '../model/PersonModel'\n\nexport class Profile extends React.Component {\n  static propTypes = {\n    party: PersonShape.isRequired,\n    onChange: PropTypes.func,\n  }\n\n  static defaultProps = {\n    onChange(person, newValues) {},\n  }\n\n  render() {\n    const {party: person, validationSchema} = this.props\n    const {firstName, lastName} = person\n    console.log('Profile:render', this.props)\n    return <FormikForm>\n      <FormControl><EFormikTextField label='First Name' name='firstName'/></FormControl>\n      <FormControl><EFormikTextField label='Last Name' name='lastName'/></FormControl>\n      <EFormikButton type='reset'>Reset</EFormikButton>\n      <EFormikButton type='submit'>Submit</EFormikButton>\n    </FormikForm>\n  }\n}\n\nexport const ValidatingProfile = withEFormik({\n  enableReinitialize: true,\n  onSubmit(values, formik) {\n    console.log('submit', values, formik)\n  },\n  mapPropsToValues(props) {\n    const {party: person} = props\n    const {firstName, lastName} = person\n    return {firstName, lastName}\n  },\n  validateOnInitial: true,\n  validateOnReset: true,\n  validateOnBlur: true,\n  validateOnChange: true,\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().min(20),\n    lastName: Yup.string(),\n  }),\n})(Profile)\n"],"file":"Profile.js"}