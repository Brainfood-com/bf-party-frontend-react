{"version":3,"sources":["../../src/model/PartyModel.js"],"names":["PropTypes","React","HelpOutlineIcon","Avatar","RoleShape","shape","roleTypeId","string","isRequired","description","PartyShape","partyId","partyTypeEnumId","TypedPartyComponent","party","props","SubClass","constructor","itemTypeMap","renderDefault","clz","Component","PartyIcon","PartyAvatar","PartyName","reduceResolvedParties","parties","object","_parties"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport Avatar from '@material-ui/core/Avatar'\n\nexport const RoleShape = PropTypes.shape({\n  roleTypeId: PropTypes.string.isRequired,\n  description: PropTypes.string,\n})\nexport const PartyShape = PropTypes.shape({\n  partyId: PropTypes.string.isRequired,\n  partyTypeEnumId: PropTypes.string.isRequired,\n})\n//const ResolvedPartiesShape = PropTypes.objectOf(PartyShape)\n//const ResolvedRolesShape = PropTypes.objectOf(RoleShape)\n\nexport class TypedPartyComponent extends React.Component {\n  static propTypes = {\n    party: PartyShape.isRequired,\n  }\n\n  static register(clz) {\n    // this is a static class instance\n    const itemTypeMap = this.itemTypeMap || (this.itemTypeMap = {})\n    itemTypeMap[clz.partyTypeEnumId] = clz\n    return clz\n  }\n\n  renderDefault() {\n    return null\n  }\n\n  render() {\n    const {party} = this.props\n    if (!party) {\n      return null\n    }\n    const {partyTypeEnumId} = party\n    const SubClass = this.constructor.itemTypeMap[partyTypeEnumId]\n    if (SubClass) {\n      return <SubClass party={party}/>\n    } else {\n      return renderDefault()\n    }\n  }\n}\n\nexport class PartyIcon extends TypedPartyComponent {\n  renderDefault() {\n    return <HelpOutlineIcon/>\n  }\n}\n\nexport class PartyAvatar extends React.Component {\n  static propTypes = {\n    party: PartyShape.isRequired,\n  }\n\n  render() {\n    const {party} = this.props\n    return <Avatar><PartyIcon party={party}/></Avatar>\n  }\n}\n\nexport class PartyName extends TypedPartyComponent {\n  renderDefault() {\n    return null\n  }\n}\n\nexport function reduceResolvedParties(parties = {}, object) {\n  if (object && object._parties) {\n    object._parties.forEach(party => parties[party.partyId] = party)\n  }\n  return parties\n}\n"],"file":"PartyModel.js"}