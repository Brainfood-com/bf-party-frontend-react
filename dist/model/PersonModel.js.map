{"version":3,"sources":["../../src/model/PersonModel.js"],"names":["PropTypes","React","PersonIconMUI","Typography","PartyName","PartyIcon","PersonShape","shape","partyId","string","isRequired","partyTypeEnumId","oneOf","profilePic","displayName","familyName","givenName","PersonIcon","register","party","props","Component","PersonName"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,cAAnC;AAEA,OAAO,IAAMC,WAAW,GAAGN,SAAS,CAACO,KAAV,CAAgB;AACzCC,EAAAA,OAAO,EAAER,SAAS,CAACS,MAAV,CAAiBC,UADe;AAEzCC,EAAAA,eAAe,EAAEX,SAAS,CAACY,KAAV,CAAgB,CAAC,QAAD,CAAhB,CAFwB;AAGzCC,EAAAA,UAAU,EAAEb,SAAS,CAACS,MAHmB;AAIzCK,EAAAA,WAAW,EAAEd,SAAS,CAACS,MAJkB;AAKzCM,EAAAA,UAAU,EAAEf,SAAS,CAACS,MALmB;AAMzCO,EAAAA,SAAS,EAAEhB,SAAS,CAACS;AANoB,CAAhB,CAApB;AASP,OAAO,IAAMQ,UAAU,GAAGZ,SAAS,CAACa,QAAV;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAKf;AAAA,UACAC,KADA,GACS,KAAKC,KADd,CACAD,KADA;AAAA,UAEAN,UAFA,GAEcM,KAFd,CAEAN,UAFA;;AAGP,UAAIA,UAAJ,EAAgB;AACd,eAAO;AAAK,UAAA,GAAG,EAAEA;AAAV,UAAP;AACD,OAFD,MAEO;AACL,eAAO,oBAAC,aAAD,OAAP;AACD;AACF;AAbuB;;AAAA;AAAA,EAA4CZ,KAAK,CAACoB,SAAlD,8CACC,QADD,wCAEL;AACjBF,EAAAA,KAAK,EAAEb,WAAW,CAACI;AADF,CAFK,UAAnB;AAgBP,OAAO,IAAMY,UAAU,GAAGlB,SAAS,CAACc,QAAV;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAKf;AAAA,UACAC,KADA,GACS,KAAKC,KADd,CACAD,KADA;AAEP,aAAO,oBAAC,UAAD,QAAaA,KAAK,CAACL,WAAnB,CAAP;AACD;AARuB;;AAAA;AAAA,EAA4Cb,KAAK,CAACoB,SAAlD,+CACC,QADD,yCAEL;AACjBF,EAAAA,KAAK,EAAEb,WAAW,CAACI;AADF,CAFK,WAAnB","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport PersonIconMUI from '@material-ui/icons/Person'\nimport Typography from '@material-ui/core/Typography'\n\nimport {PartyName, PartyIcon} from './PartyModel'\n\nexport const PersonShape = PropTypes.shape({\n  partyId: PropTypes.string.isRequired,\n  partyTypeEnumId: PropTypes.oneOf(['Person']),\n  profilePic: PropTypes.string,\n  displayName: PropTypes.string,\n  familyName: PropTypes.string,\n  givenName: PropTypes.string,\n})\n\nexport const PersonIcon = PartyIcon.register(class PersonIcon extends React.Component {\n  static partyTypeEnumId = 'Person'\n  static propTypes = {\n    party: PersonShape.isRequired,\n  }\n  render() {\n    const {party} = this.props\n    const {profilePic} = party\n    if (profilePic) {\n      return <img src={profilePic}/>\n    } else {\n      return <PersonIconMUI/>\n    }\n  }\n})\n\nexport const PersonName = PartyName.register(class PersonName extends React.Component {\n  static partyTypeEnumId = 'Person'\n  static propTypes = {\n    party: PersonShape.isRequired,\n  }\n  render() {\n    const {party} = this.props\n    return <Typography>{party.displayName}</Typography>\n  }\n})\n"],"file":"PersonModel.js"}